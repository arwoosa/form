{
  "swagger": "2.0",
  "info": {
    "title": "proto/common.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "FormService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/form_templates": {
      "get": {
        "summary": "Lists form templates with pagination",
        "operationId": "FormService_ListFormTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceListFormTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Optional: defaults to 1 if not provided or \u003c= 0",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "description": "Optional: defaults to config value if not provided or \u003c= 0",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "description": "Optional sort field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_order",
            "description": "Optional sort order",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "FormService"
        ]
      },
      "post": {
        "summary": "Creates a new form template",
        "operationId": "FormService_CreateFormTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceCreateFormTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceCreateFormTemplateRequest"
            }
          }
        ],
        "tags": [
          "FormService"
        ]
      }
    },
    "/form_templates/{id}": {
      "get": {
        "summary": "Gets a single form template by ID",
        "operationId": "FormService_GetFormTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceFormTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FormService"
        ]
      },
      "delete": {
        "summary": "Deletes a form template by ID",
        "operationId": "FormService_DeleteFormTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FormService"
        ]
      },
      "put": {
        "summary": "Updates an existing form template",
        "operationId": "FormService_UpdateFormTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceFormTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormServiceUpdateFormTemplateBody"
            }
          }
        ],
        "tags": [
          "FormService"
        ]
      }
    },
    "/form_templates/{id}/duplicate": {
      "post": {
        "summary": "Duplicates an existing form template",
        "operationId": "FormService_DuplicateFormTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceDuplicateFormTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormServiceDuplicateFormTemplateBody"
            }
          }
        ],
        "tags": [
          "FormService"
        ]
      }
    }
  },
  "definitions": {
    "FormServiceDuplicateFormTemplateBody": {
      "type": "object"
    },
    "FormServiceUpdateFormTemplateBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "schema": {
          "type": "object"
        },
        "uischema": {
          "type": "object"
        }
      }
    },
    "commonPagination": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "type": "integer",
          "format": "int32"
        },
        "total_count": {
          "type": "integer",
          "format": "int32"
        },
        "total_pages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Pagination for list responses"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "serviceCreateFormTemplateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "schema": {
          "type": "object"
        },
        "uischema": {
          "type": "object"
        }
      }
    },
    "serviceCreateFormTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/serviceFormTemplate"
        }
      }
    },
    "serviceDuplicateFormTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/serviceFormTemplate"
        }
      }
    },
    "serviceFormTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "merchant_id": {
          "type": "string"
        },
        "schema": {
          "type": "object",
          "title": "JSON Schema defining data structure and validation rules"
        },
        "uischema": {
          "type": "object",
          "title": "UI Schema defining form layout and appearance"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by": {
          "type": "string"
        }
      },
      "title": "Form Template Messages"
    },
    "serviceListFormTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/serviceFormTemplate"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    }
  }
}
